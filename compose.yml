services:
  # =============================================================================
  # CORE SERVICES
  # =============================================================================

  ghost:
    image: ghost:${GHOST_VERSION:-6-alpine}
    restart: always
    volumes:
      - ghost-content-data:/var/lib/ghost/content
    environment:
      - NODE_ENV=production
      - COMPOSE_PROFILES
      # Core Ghost Configuration
      - SERVICE_URL_GHOST_2368
      - url=https://$DOMAIN
      #- url=https://${DOMAIN:?DOMAIN environment variable is required}
      #- admin__url=${ADMIN_DOMAIN:+https://${ADMIN_DOMAIN}}

      # Database Configuration (preserving SERVICE_* pattern)
      - database__client=mysql
      - database__connection__host=mysql
      - database__connection__user=${SERVICE_USER_MYSQL}
      - database__connection__password=${SERVICE_PASSWORD_MYSQL}
      - database__connection__database=${MYSQL_DATABASE:-ghost}

      # Mail Configuration (preserving existing pattern)
      - mail__transport=SMTP
      - mail__options__auth__pass=${MAIL_OPTIONS_AUTH_PASS}
      - mail__options__auth__user=${MAIL_OPTIONS_AUTH_USER}
      - mail__options__secure=${MAIL_OPTIONS_SECURE:-true}
      - mail__options__port=${MAIL_OPTIONS_PORT:-465}
      - mail__options__service=${MAIL_OPTIONS_SERVICE:-Mailgun}
      - mail__options__host=${MAIL_OPTIONS_HOST}

      # Enable required features for analytics and ActivityPub
      - labs__publicAPI=true

      # Tinybird Analytics Configuration (optional)
      - tinybird__tracker__endpoint=https://${DOMAIN:?DOMAIN environment variable is required}/_tinybird/api/v1/page_hit
      - tinybird__adminToken=${TINYBIRD_ADMIN_TOKEN:-}
      - tinybird__workspaceId=${TINYBIRD_WORKSPACE_ID:-}
      - tinybird__tracker__datasource=analytics_events
      - tinybird__stats__endpoint=${TINYBIRD_API_URL:-https://api.tinybird.co}
    depends_on:
      mysql:
        condition: service_healthy
      # Optional analytics dependencies
      tinybird-sync:
        condition: service_completed_successfully
        required: false
      tinybird-deploy:
        condition: service_completed_successfully
        required: false
      # Optional ActivityPub dependency
      activitypub:
        condition: service_started
        required: false
    healthcheck:
      test: ["CMD", "echo", "ok"]
      interval: 5s
      timeout: 20s
      retries: 10
    networks:
      - ghost_network

  mysql:
    image: mysql:8.0.42@sha256:4445b2668d41143cb50e471ee207f8822006249b6859b24f7e12479684def5d9
    restart: always
    volumes:
      - ghost-mysql-data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    environment:
      # Preserve SERVICE_* pattern for compatibility
      - MYSQL_USER=${SERVICE_USER_MYSQL}
      - MYSQL_PASSWORD=${SERVICE_PASSWORD_MYSQL}
      - MYSQL_ROOT_PASSWORD=${SERVICE_PASSWORD_MYSQLROOT}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-ghost}
      # Add support for multiple databases
      - MYSQL_MULTIPLE_DATABASES=activitypub
    healthcheck:
      test: mysqladmin ping -p$$MYSQL_ROOT_PASSWORD -h 127.0.0.1
      interval: 1s
      start_period: 30s
      start_interval: 10s
      retries: 120
    networks:
      - ghost_network

  # =============================================================================
  # ANALYTICS SERVICES (Easy to disable - comment this entire section)
  # To disable analytics: comment out this section OR omit --profile=analytics
  # =============================================================================

  traffic-analytics:
    image: ghost/traffic-analytics:1.0.16@sha256:9bfdad7f32661f7fc2c0eb32bbf096d43e358ec416dffc7ca6df58185cb0cde3
    restart: always
    expose:
      - "3000"
    volumes:
      - traffic_analytics_data:/data
    environment:
      NODE_ENV: production
      PROXY_TARGET: ${TINYBIRD_API_URL:-https://api.tinybird.co}/v0/events
      SALT_STORE_TYPE: ${SALT_STORE_TYPE:-file}
      SALT_STORE_FILE_PATH: /data/salts.json
      TINYBIRD_TRACKER_TOKEN: ${TINYBIRD_TRACKER_TOKEN:-}
      LOG_LEVEL: debug
    profiles: [analytics]
    networks:
      - ghost_network

  tinybird-login:
    build:
      context: ./tinybird
      dockerfile: Dockerfile
    working_dir: /home/tinybird
    command: /usr/local/bin/tinybird-login
    volumes:
      - tinybird_home:/home/tinybird
      - tinybird_files:/data/tinybird
    profiles: [analytics]
    networks:
      - ghost_network
    tty: false
    restart: no

  tinybird-sync:
    image: ghost:${GHOST_VERSION:-6-alpine}
    command: >
      sh -c "
        if [ -d /var/lib/ghost/current/core/server/data/tinybird ]; then
          rm -rf /data/tinybird/*;
          cp -rf /var/lib/ghost/current/core/server/data/tinybird/* /data/tinybird/;
          echo 'Tinybird files synced into shared volume.';
        else
          echo 'Tinybird source directory not found.';
        fi
      "
    volumes:
      - tinybird_files:/data/tinybird
    depends_on:
      tinybird-login:
        condition: service_completed_successfully
    networks:
      - ghost_network
    profiles: [analytics]
    restart: no

  tinybird-deploy:
    build:
      context: ./tinybird
      dockerfile: Dockerfile
    working_dir: /data/tinybird
    command: >
      sh -c "
        tb-wrapper --cloud deploy
      "
    volumes:
      - tinybird_home:/home/tinybird
      - tinybird_files:/data/tinybird
    depends_on:
      tinybird-sync:
        condition: service_completed_successfully
    profiles: [analytics]
    networks:
      - ghost_network
    tty: true

  # =============================================================================
  # ACTIVITYPUB SERVICES
  # =============================================================================

  activitypub:
    image: ghcr.io/tryghost/activitypub:1.1.0@sha256:39c212fe23603b182d68e67d555c6b9b04b1e57459dfc0bef26d6e4980eb04d1
    restart: always
    expose:
      - "8080"
    volumes:
      - ghost-content-data:/opt/activitypub/content
    environment:
      NODE_ENV: production
      MYSQL_HOST: mysql
      MYSQL_USER: ${SERVICE_USER_MYSQL}
      MYSQL_PASSWORD: ${SERVICE_PASSWORD_MYSQL}
      MYSQL_DATABASE: activitypub
      LOCAL_STORAGE_PATH: /opt/activitypub/content/images/activitypub
      LOCAL_STORAGE_HOSTING_URL: https://${DOMAIN}/content/images/activitypub
    depends_on:
      mysql:
        condition: service_healthy
      activitypub-migrate:
        condition: service_completed_successfully
    profiles: [activitypub]
    networks:
      - ghost_network
    labels:
      - 'traefik.enable=true"
      - 'traefik.http.services.$COOLIFY_CONTAINER_NAME.loadbalancer.passhostheader=true'
      - 'traefik.http.services.$COOLIFY_CONTAINER_NAME.loadbalancer.server.port=8080'
      - 'traefik.http.routers.$COOLIFY_CONTAINER_NAME.entrypoints=websecure'
      - 'traefik.http.routers.$COOLIFY_CONTAINER_NAME.service=activitypub'
      - 'traefik.http.routers.$COOLIFY_CONTAINER_NAME.tls=true'
      - 'traefik.http.routers.$COOLIFY_CONTAINER_NAME.tls.certresolver=leresolver'
      - 'traefik.http.routers.$COOLIFY_CONTAINER_NAME.rule=Host(`$DOMAIN`) && (PathPrefix(`/.ghost/activitypub/`) || Path(`/.well-known/webfinger`) || Path(`/.well-known/nodeinfo`))'

  activitypub-migrate:
    image: ghcr.io/tryghost/activitypub-migrations:1.1.0@sha256:b3ab20f55d66eb79090130ff91b57fe93f8a4254b446c2c7fa4507535f503662
    environment:
      MYSQL_DB: mysql://${SERVICE_USER_MYSQL}:${SERVICE_PASSWORD_MYSQL}@tcp(mysql:3306)/activitypub
    networks:
      - ghost_network
    depends_on:
      mysql:
        condition: service_healthy
    profiles: [activitypub]
    restart: no

volumes:
  ghost-content-data:
  ghost-mysql-data:
  tinybird_files:
  tinybird_home:
  traffic_analytics_data:

networks:
  ghost_network:
